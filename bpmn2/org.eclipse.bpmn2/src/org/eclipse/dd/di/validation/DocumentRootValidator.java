/**
 *
 * $Id$
 */
package org.eclipse.dd.di.validation;

import java.util.Map;

import org.eclipse.dd.di.Diagram;
import org.eclipse.dd.di.DiagramElement;
import org.eclipse.dd.di.Edge;
import org.eclipse.dd.di.Label;
import org.eclipse.dd.di.LabeledEdge;
import org.eclipse.dd.di.LabeledShape;
import org.eclipse.dd.di.Node;
import org.eclipse.dd.di.Plane;
import org.eclipse.dd.di.Shape;
import org.eclipse.dd.di.Style;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * A sample validator interface for {@link org.eclipse.dd.di.DocumentRoot}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DocumentRootValidator {
    boolean validate();

    boolean validateMixed(FeatureMap value);

    boolean validateXMLNSPrefixMap(Map<String, String> value);

    boolean validateXSISchemaLocation(Map<String, String> value);

    boolean validateDiagramElement(DiagramElement value);

    boolean validateDiagram(Diagram value);

    boolean validateEdge(Edge value);

    boolean validateLabel(Label value);

    boolean validateLabeledEdge(LabeledEdge value);

    boolean validateLabeledShape(LabeledShape value);

    boolean validateNode(Node value);

    boolean validatePlane(Plane value);

    boolean validateShape(Shape value);

    boolean validateStyle(Style value);
}
