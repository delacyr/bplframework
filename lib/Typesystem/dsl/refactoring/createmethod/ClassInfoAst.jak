layer refactoring_createmethod;

import mixin.AST_FieldDecl;
import mixin.AST_FieldDeclElem;
import mixin.AstOptNode;
import mixin.MethodDcl;


/**
 * @layer<refactoring_createmethod>
 * @author Stephan Klapproth
 * 
 */
refines class ClassInfoAst {

    private AST_FieldDecl getFieldDecl() throws TransformationException {
        ClsBody tmpBody = getClsBody();
        if (tmpBody == null) {
            throw new TransformationException("No class body found.");
        }
        AST_FieldDecl tmpDecl = tmpBody.getAST_FieldDecl();
        if (tmpDecl == null) {
            tmpBody.setParms((AstToken) tmpBody.tok[0],
                    new AstOptNode().setParms(new AST_FieldDecl()),
                    (AstToken) tmpBody.tok[1]);
        }
        return tmpBody.getAST_FieldDecl();
    }

    MethodInfo addMethod(MethodDcl aDecl) throws TransformationException {
        getFieldDecl().add(new AST_FieldDeclElem().setParms(aDecl));
        MethodInfo tmpMethod = new MethodInfoAst(aDecl);
        addDeclaration(tmpMethod);
        return tmpMethod;
    }
}
