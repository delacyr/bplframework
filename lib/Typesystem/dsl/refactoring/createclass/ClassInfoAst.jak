layer refactoring_createclass;

import java.io.StringReader;

import mixin.ParseException;
import mixin.Parser;


/**
 * @layer<refactoring_createclass>
 * @author Stephan Klapproth
 * 
 */
refines class ClassInfoAst {

    public static ClassInfo createEmptyClass(LayerInfo aLayer,
            ModifierInfo[] someModifier, String aClassName,
            ClassInfo aSuperClass, ClassInfo[] someInterfaces, File aFile)
            throws TransformationException {

        if (aLayer == null) {
            throw new NullPointerException("aLayer cannot be null.");
        }

        ClassInfo tmpExistingClass = aLayer.findClass(aClassName);
        if (tmpExistingClass != null 
                && tmpExistingClass.getContext().equals(aLayer)) {
            throw new TransformationException(aClassName
                    + " already exists in the layer "
                    + tmpExistingClass.getContext() + ".");
        }

        String tmpCode = new AstStringUtil().getBaseClass(aLayer.getName(),
                aClassName, aSuperClass, someInterfaces, someModifier);
        ClassInfoAst tmpClass = new ClassInfoAst(aFile, (program) parse(tmpCode));
        aLayer.addDeclaration(tmpClass);
        return tmpClass;

    }

    static AstNode parse(String aCode) {
        try {
            AstNode tmpNode = Parser.getInstance(new StringReader(aCode))
                    .parseAll();
            return tmpNode;

        } catch (ParseException e) {
            return null;
        }
    }
}
