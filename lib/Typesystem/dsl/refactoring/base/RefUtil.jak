layer refactoring_base;

import java.util.ArrayList;
import java.util.List;

import mixin.QName;
import mixin.AST_QualifiedName;
import mixin.AstToken;

class RefUtil {

    private static final String INDENT = "    ";

    public static final String FILE_SEP = System.getProperty("file.separator");
    public static final String FILE_SUF = ".jak";

    public static String indent(int aLevel) {
        StringBuilder tmpBuilder = new StringBuilder();
        for (int i = 0; i < aLevel; i++) {
            tmpBuilder.append(INDENT);
        }
        return tmpBuilder.toString();
    }

    public static String firstCharToUpperCase(String aString) {
        if (aString == null || aString.length() < 1) {
            throw new IllegalArgumentException();
        }
        StringBuilder tmpStr = new StringBuilder(aString);
        tmpStr.setCharAt(0, Character.toUpperCase(tmpStr.charAt(0)));
        return tmpStr.toString();
    }

    public static ClassInfo[] getTypes(FieldInfo[] someFields) {
        List tmpTypes = new ArrayList();
        for (int i = 0; i < someFields.length; i++) {
            tmpTypes.add(someFields[i].getType());
        }
        return (ClassInfo[]) tmpTypes.toArray(new ClassInfo[tmpTypes.size()]);
    }

    public static String[] getNames(FieldInfo[] someFields) {
        List tmpNames = new ArrayList();
        for (int i = 0; i < someFields.length; i++) {
            tmpNames.add(someFields[i].getName());
        }
        return (String[]) tmpNames.toArray(new String[tmpNames.size()]);
    }

    // aQName vor aBefore einfügen
    public static void addQNameBefore(String aQName, QName aBefore) {
        AST_QualifiedName tmpQual = AST_QualifiedName.MakeAST(aQName);
        aBefore.AddBefore(tmpQual);
        QName tmpNew = (QName) aBefore.up.left.arg[0];

        setLineNum(aBefore.findToken().lineNum(), tmpNew.findToken());
        moveWhitespace(aBefore.findToken(), tmpNew.findToken());
        addDotBeforeQName(aBefore);
    }

    // Zeilennummer von aToken auf aLineNum setzen
    public static void setLineNum(int aLineNum, AstToken aToken) {
        aToken.setParms(aToken.white_space, aToken.name, aLineNum);
    }

    private static void addDotBeforeQName(QName aQName) {
        if (aQName.up.tok == null) {
            aQName.up.tok = new AstToken[1];
        }
        aQName.up.tok[0] = new AstToken().setParms("", String
                .valueOf(TypesysUtil.DOT), aQName.findToken().lineNum());
    }

    // Whitespaces von aFrom zu aTo verschieben
    private static void moveWhitespace(AstToken aFrom, AstToken aTo) {
        aTo.white_space = aFrom.white_space;
        aFrom.white_space = "";
    }

    private RefUtil() {
    }

}
