layer typesys;

import mixin.AstCursor;
import mixin.AstNode;
import mixin.CatchStmt;
import mixin.DecNameDim;
import mixin.FinallyC;
import mixin.FormalParameter;
import mixin.FormParDecl;
import mixin.TryStmt;


/**
 * 
 * @layer<typesys>
 * @author Stephan Klapproth
 * 
 */
class TryScope extends AbstractBlockScope {

    private TryStmt node;

    TryScope(TryStmt aNode) {
        node = aNode;
    }
    
    void init() {
        super.init();
        initStatement(node.getBlock());
        initCatches();
        initFinally();
    }

    private void initCatches() {
        if (node.getAST_Catches() == null) {
            return;
        }
        AstCursor c = new AstCursor();
        for (c.FirstElement(node.getAST_Catches()); c.MoreElement(); c
                .NextElement()) {
            if (c.node instanceof CatchStmt) {
                initExcParam(((CatchStmt) c.node).getFormalParameter());
                initStatement(((CatchStmt) c.node).getBlock());
            }
        }
    }

    private void initExcParam(FormalParameter aParam) {
        if (!(aParam instanceof FormParDecl)) {
            return;
        }
        addDeclaration(new FieldInfoAst(((FormParDecl) aParam)
                .getAST_TypeName(), (DecNameDim) ((FormParDecl) aParam)
                .getVariableDeclaratorId()));
    }

    private void initFinally() {
        if (node.getFinally() instanceof FinallyC) {
            initStatement(((FinallyC) node.getFinally()).getBlock());
        }
    }

    public AstNode getAstNode() {
        return node;
    }
}