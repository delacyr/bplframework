<?xml version="1.0" encoding="UTF-8"?>

<project name="refactor" basedir=".." default="makeRefactor">

	<property file="${basedir}/ant/build.properties" />

	<import file="${basedir}/ant/ahead.xml" />

	<property name="src.dir" location="${basedir}/src" />
	<property name="dsl.dir" location="${basedir}/dsl" />
	<property name="lib.dir" location="${basedir}/lib" />

	<property name="equations.file" location="${basedir}/refactor.equations" />

	<property name="equation.refactor" value="refactor" />

	<property name="equation.ast" value="ast" />
	<property name="ast.jarfile" value="${lib.dir}/ast.jar" />
	<property name="ast.target" value="mixin" />

	<property name="equation.dependency" value="dependency" />

	<property name="target" value="refactor" />


	<!-- =================================
          target: makeAst              
         ================================= -->
	<target name="makeAst" description="--> Ahead AST erzeugen">

		<property name="tmp" location="${basedir}/tmp" />

		<mkdir dir="${tmp}" />
	
		<antcall target="compile">
			<param name="equation.name" value="${equation.ast}" />
			<param name="compile.dir" value="${tmp}" />
			<param name="target" value="${ast.target}" />
		</antcall>

		<property name="javaccgrammar" value="${tmp}/${ast.target}/grammar.cc" />

		<antcall target="bali2javacc">
			<param name="baligrammar" value="${tmp}/${ast.target}/grammar.b" />
			<param name="packagename" value="${ast.target}" />
		</antcall>

		<javacc javacchome="${javacc.home}" target="${javaccgrammar}" />

		<javac classpath="${lib.dir}/jakarta.jar" srcdir="${tmp}" destdir="${tmp}" debug="true" debuglevel="lines, vars, source"/>

		<delete file="${ast.jarfile}" quiet="true" />

		<jar destfile="${ast.jarfile}" basedir="${tmp}" includes="**/*.java, **/*.class" />

		<delete dir="${tmp}" />

	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: checkAstJar                      
         - - - - - - - - - - - - - - - - - -->
	<target name="checkAstJar">
		<available file="${ast.jarfile}" property="ast.exists" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: createAst
         - - - - - - - - - - - - - - - - - -->
	<target name="createAst" depends="checkAstJar" if="${ast.exists}">
		<antcall target="makeAst" />
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: compile                      
         - - - - - - - - - - - - - - - - - -->
	<target name="compile">
		<antcall target="composer">
			<param name="output.dir" value="${compile.dir}" />
			<param name="equation.src" value="${equations.file}" />
			<param name="target" value="${target}" />
		</antcall>

		<antcall target="jak2java">
			<param name="output.dir" value="${compile.dir}/${target}" />
			<param name="jakfile" value="*.jak" />
		</antcall>
	</target>


	<!-- ================================= 
          target: makeRefactor              
         ================================= -->
	<target name="makeRefactor" depends="createAst" description="--> Refactor erzeugen">

		<delete dir="${src.dir}/${target}" quiet="true" />

		<antcall target="compile">
			<param name="equation.name" value="${equation.refactor}" />
			<param name="compile.dir" value="${src.dir}" />
		</antcall>

		<delete>
			<fileset dir="${src.dir}/${target}">
				<include name="*.jak" />
			</fileset>
		</delete>
	</target>

	<!-- ================================= 
          target: makeDependency              
         ================================= -->
	<target name="makeDependency" description="--> Dependency logger erzeugen">
		
		<delete dir="${src.dir}/${target}" quiet="true" />
		
		<antcall target="compile">
			<param name="equation.name" value="${equation.dependency}" />
			<param name="compile.dir" value="${src.dir}" />
		</antcall>
		
		<delete>
			<fileset dir="${src.dir}/${target}">
				<include name="*.jak" />
			</fileset>
		</delete>

	</target>

</project>